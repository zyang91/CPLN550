45^-0.1
0^-0.1
45^(-0.1)
45^0.1
45^(-0.2)
30^-0.2
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/apple/Desktop/CPLN501")
library(dplyr)
library(ggplot2)
setwd("/Users/apple/Desktop/CPLN501")
load('baltimore_census.rda')
load('census_tracts.Rda')
head(baltimore)
head(dat2000)
bmore <- baltimore %>%
rename(tract_fips = tract_id,
total_pop = population) %>%
mutate(poverty_rate = pop_poverty/total_pop,
pop_density = total_pop/area,
region_new = recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"),
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612),
quartile (run summary)
bmore<- baltimore %>%
rename(tract_fips= tract_id,
total_pop=population)%>%
mutate(poverty_rate= pop_poverty/total_pop,
pop_density= total_pop/land_area,
region_new=recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"))%>%
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612),
labels=c("Q1","Q2","Q3","Q4")) %>%
select(-tract_name, -fake_region) %>%
filter(region_new == "Region1" | region_new == "Region3")
bmore<- baltimore %>%
rename(tract_fips= tract_id,
total_pop=population)%>%
mutate(poverty_rate= pop_poverty/population,
pop_density= population/land_area,
region_new=recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"))%>%
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612),
labels=c("Q1","Q2","Q3","Q4")) %>%
select(-tract_name, -fake_region) %>%
filter(region_new == "Region1" | region_new == "Region3")
View(baltimore)
bmore<- baltimore %>%
rename(tract_fips= tract_id,
population=population)%>%
mutate(poverty_rate= pop_poverty/population,
pop_density= population/land_area,
region_new=recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"))%>%
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612),
labels=c("Q1","Q2","Q3","Q4")) %>%
select(-tract_name, -fake_region) %>%
filter(region_new == "Region1" | region_new == "Region3")
bmore<- baltimore %>%
rename(tract_fips= tract_id,
population=population)%>%
mutate(poverty_rate= pop_poverty/population,
pop_density= population/land_area,
region_new=recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"))%>%
pop_category = cut(population,
breaks=c(0, 2062, 2917, 3862, 6612),
labels=c("Q1","Q2","Q3","Q4")) %>%
select(-tract_name, -fake_region) %>%
filter(region_new == "Region1" | region_new == "Region3")
bmore<- baltimore %>%
rename(tract_fips= tract_id,
population=population)%>%
mutate(poverty_rate= pop_poverty/population,
pop_density= population/land_area,
region_new=recode(fake_region,
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"))%>%
pop_category = cut(population,
breaks=c(0, 2062, 2917, 3862, 6612),
labels=c("Q1","Q2","Q3","Q4")) %>%
select(-tract_name, -fake_region) %>%
filter(region_new == "Region1" | region_new == "Region3")
bmore <- baltimore %>% # %>% means piping, or carry previous object to next step
rename(tract_fips = tract_id, # new name = current name
total_pop = population) %>% # tidyverse does not require $ when dealing with column names
mutate(poverty_rate = pop_poverty/total_pop, #creating new variables
pop_density = total_pop/area,
region_new = recode(fake_region, # recoding regions to something more descriptive
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"),
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612), # recategorizing population by quartile (run summary)
labels=c("Q1","Q2","Q3","Q4"))) %>%
select(-tract_name, -fake_region) %>% # delete certain columns, alternatively, keep certain columns without the - sign
filter(region_new == "Region1" | region_new == "Region3")
bmore <- baltimore %>% # %>% means piping, or carry previous object to next step
rename(tract_fips = tract_id, # new name = current name
total_pop = population) %>% # tidyverse does not require $ when dealing with column names
mutate(poverty_rate = pop_poverty/total_pop, #creating new variables
pop_density = total_pop/area,
region_new = recode(fake_region, # recoding regions to something more descriptive
`east` = "Region1",
`west` = "Region2",
`north` = "Region3",
`south` = "Region4"),
pop_category = cut(total_pop,
breaks=c(0, 2062, 2917, 3862, 6612), # recategorizing population by quartile (run summary)
labels=c("Q1","Q2","Q3","Q4"))) %>%
select(-tract_name, -fake_region) %>% # delete certain columns, alternatively, keep certain columns without the - sign
filter(region_new == "Region1" | region_new == "Region3")
ggplot(dat2010, aes(x=pop)) +
geom_histogram(col="black",
fill="#225566",
alpha = .5,
binwidth = 200) +
labs(x="population", y="counts") +
ggtitle("Population 2010")
dat2010 %>% mutate(perc.white = pop_white_nonhispanic/pop,
majority = cut(perc.white,
breaks = c(0, 0.5, 1),
labels = c("nonwhite", "white"))) %>%
filter(majority == "white") %>%
ggplot(aes(x=pop)) +
geom_histogram(col="black", fill="white",alpha = .5, binwidth = 200) +
labs(x="population", y="counts") +
ggtitle("Population 2010")
dat2000 %>%
mutate(perc.white = pop_white_nonhispanic/pop,
majority = cut(perc.white,
breaks = c(0, 0.5, 1),
labels = c("nonwhite", "white"))) %>%
drop_na(majority) %>%
ggplot(., aes(x = pop, y = pop_plus10, color = majority)) +
geom_point(size = 2) +
scale_color_manual(values=c("#999999", "#E69F00")) +
xlim(0, 8000) +
labs(x="pop 2000", y="pop 2010") +
geom_smooth(method = "lm", color = "red", se=FALSE)
dat2010 %>% mutate(perc.white = pop_white_nonhispanic/pop,
majority = cut(perc.white,
breaks = c(0, 0.5, 1),
labels = c("nonwhite", "white"))) %>%
drop_na(majority) %>%
ggplot(., aes(x=majority, y=median_hh_income,
fill = majority)) +
geom_boxplot(alpha = 0.7) +
labs(x="Race", y="Median HH Income") +
scale_fill_manual(values=c("#336699", "#666666"))
library(tidyverse)
setwd("/Users/apple/Desktop/CPLN501")
library(tidyverse)
setwd("/Users/apple/Desktop/CPLN501")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/apple/Desktop/CPLN550")
library(dplyr)
library(ggplot2)
hh <- read.csv("Data/1_Household_Public.csv")
per <- read.csv("Data/2_Person_Public.csv")
veh <- read.csv("Data/3_Vehicle_Public.csv")
trip <- read.csv("Data/4_Trip_Public.csv")
random <- hh %>%
filter(HH_ID == 101162)
random_person <- per %>%
filter(HH_ID == 101162)
random <- hh %>%
filter(HH_ID == 101162)
random_person <- per %>%
filter(HH_ID == 101162)
print(random)
print(random_person)
random_trip <- trip %>%
filter(HH_ID == 101162)
print(random_trip)
bike_trip <- trip %>%
filter(MODE_AGG == 2)
bike_trip %>%
summarise(total_trips=sum(P_WEIGHT, na.rm=TRUE))
complet_trip <-left_join(hh, trip, by = "HH_ID")
H_trip <- complet_trip %>%
filter(H_COUNTY== random$H_COUNTY)
H_trip_mode <- H_trip %>%
filter(!is.na(MODE_AGG)) %>%
group_by(MODE_AGG) %>%
summarise(total_trips_by_mode=sum(P_WEIGHT, na.rm=TRUE))
H_tripPercentage <- H_trip_mode %>%
mutate(percentage = total_trips_by_mode/sum(total_trips_by_mode)*100)
complet_trip <-left_join(hh, trip, by = "HH_ID")
H_trip <- complet_trip %>%
filter(H_COUNTY== random$H_COUNTY)
H_trip_mode <- H_trip %>%
filter(!is.na(MODE_AGG)) %>%
group_by(MODE_AGG) %>%
summarise(total_trips_by_mode=sum(P_WEIGHT, na.rm=TRUE))
H_tripPercentage <- H_trip_mode %>%
mutate(percentage = total_trips_by_mode/sum(total_trips_by_mode)*100)
print(H_tripPercentage)
household <- left_join(hh, veh, by = "HH_ID")
## clean the data-removing income missing values
household <- household %>%
filter(!INCOME %in% c(98, 99))
## Clean the data- removing the household do not have vehicle
household <- household %>%
filter(TOT_VEH.y > 0)
## Clean the data- removing missing YEAR, changing the YEAR to Car age
household <- household %>%
filter(!YEAR %in% c(9998, 9999))%>%
mutate(VEHAGE= 2014- YEAR)
household <-household %>%
mutate(income= case_when(INCOME==1 ~ "Under $10,000",
INCOME==2 ~ "$10,000-$24,999",
INCOME==3 ~ "$25,000-$34,999",
INCOME==4 ~ "$35,000-$49,999",
INCOME==5 ~ "$50,000-$74,999",
INCOME==6 ~ "$75,000-$99,999",
INCOME==7 ~ "$100,000-$149,999",
INCOME==8 ~ "$150,000-$199,999",
INCOME==9 ~ "$200,000-$249,999",
INCOME==10 ~ "$250,000 or more"))
household$income <- factor(household$income, levels = c("Under $10,000",
"$10,000-$24,999",
"$25,000-$34,999",
"$35,000-$49,999",
"$50,000-$74,999",
"$75,000-$99,999",
"$100,000-$149,999",
"$150,000-$199,999",
"$200,000-$249,999",
"$250,000 or more"))
ggplot(household, aes(x= income, y= VEHAGE))+
geom_boxplot()+
labs(title="Boxplot of Car Age by Household Income Level",
x="Income level", y= "Vehicle Age")
ggplot(household, aes(x = income, y = VEHAGE)) +
geom_boxplot(outlier.shape = NA) +
labs(
title = "Boxplot of Car Age by Household Income Level",
x = "Income level", y = "Vehicle Age")+
ylim(0, 30)
modechoice<-left_join(hh, trip, by = "HH_ID")
## clean the data-removing income missing values
modechoice <- modechoice %>%
filter(!INCOME %in% c(98, 99))
## Clean the data- removing missing MODE_AGG
modechoice <- modechoice %>%
filter(!is.na(MODE_AGG))
modechoice <- modechoice %>%
mutate(mode= case_when(MODE_AGG==1 ~ "Walk",
MODE_AGG==2 ~ "Bike",
MODE_AGG==3 ~ "Private Vehicle",
MODE_AGG==4 ~ "Private Transit",
MODE_AGG==5 ~ "Public Transit",
MODE_AGG==6 ~ "School Bus",
MODE_AGG==7 ~ "Other"))
modechoice$mode <- factor(modechoice$mode, levels = c("Walk",
"Bike",
"Private Vehicle",
"Private Transit",
"Public Transit",
"School Bus",
"Other"))
## plot boxplot
ggplot(modechoice, aes(x= mode, y= INCOME, fill = mode))+
geom_boxplot()+
labs(title="Boxplot of Household Income by Mode Choice",
x="Mode Choice", y= "Household Income")+
theme(legend.position = "none")

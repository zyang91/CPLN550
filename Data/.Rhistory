setwd("/Users/apple/Desktop/CPLN550/Data")
load("data.Rda")
load("data_test.Rda")
dat <- data_train
str(dat)
labels <- c("Average weekday transit ridership (average of boardings and alightings)",
"Trains in and out at the AM peak", "Number of bus connections within a quarter mile",
"Park and ride dummy", "Commuter rail dummy", "terminal station", "airport station",
"BRT station", "light rail station", "heavy rail station", "multimodal transfer center",
"average distance to next station stops", "network distance to central business district",
"jobs accessible within 30m drive", "Population residing within a half mile", "jobs within a half mile",
"Unique CBSA id", "CBSA name")
labels <- as.data.frame(cbind(names(dat),labels))
labels
head(dat)
labels
summary(dat)
table(dat$parking_d)
hist(dat$rider)
library(tidyverse)
ggplot(dat, aes(x=rider)) + geom_histogram(binwidth=1000)
head(dat)
clrhash()
dat$jobs_30m_drive[dat$jobs_30m_drive < 0] <- NA
# This isn't a very helpful visualization because of outlier(s).
plot(density(dat$rider))
normaldist <- rnorm(1000,mean=6300,sd=12775.94)
plot(normaldist)
plot(density(normaldist))
par(mfrow=c(1,2))
plot(density(dat$rider))
plot(density(normaldist))
par(mfrow=c(1,1))
hist(dat$rider[dat$rider < 10000], breaks = 20)
hist(dat$rider[dat$lrt_d == 1])
hist(dat$rider[dat$hrt_d == 1])
hist(dat$rider[dat$lrt_d == 1 & dat $ rider < 10000])
hist(dat$rider[dat$hrt_d == 1 & dat $ rider < 10000])
plot(dat$frequency, dat$rider)
abline(lm(dat$rider ~ dat$frequency))
ggplot(dat, aes(x=frequency, y=rider)) + geom_point() + geom_smooth(method = "lm")
boxplot(rider ~ hrt_d, dat)
#Boxplot is a helpful way to look at distribution
ggplot(dat, aes(x=frequency, y=rider)) + geom_boxplot()
boxplot(rider ~ hrt_d, dat)
boxplot(rider ~ hrt_d, dat, outline = F)
boxplot(rider~hrt_d, subset(dat, dat$rider <10000))
median(dat$rider[dat$hrt_d==0])
median(dat$rider[dat$hrt_d==1])
mean(dat$rider[dat$hrt_d==1])
mean(dat$rider[dat$hrt_d==1 & dat$CBSA_nam!="New York-Northern New Jersey-Long Island NY-NJ-PA"])
x <- lm(rider ~ pop_halfmile + jobs_halfmile + frequency, dat)
summary(x)
ggplot(dat, aes(x=pop_halfmile, y=rider)) + geom_point() + geom_smooth(method = "lm")
TheAwesomeCICalculator <- function(coefficient, stderror)
{
upper <- coefficient + 1.96 * stderror
lower <- coefficient - 1.96 * stderror
cat("Upper = ", upper)
cat(" Lower = ", lower)
}
TheAwesomeCICalculator(2.012e-01,2.991e-02)
View(TheAwesomeCICalculator)
x2 <- lm(rider ~ pop_halfmile + jobs_halfmile + frequency + bus_connections, dat)
summary(x2)
stargazer(x,x2, type = "text")
library(stargazer)
stargazer(x,x2, type = "text")
anova(x,x2)
dat$p1 <- predict(x2)
hist(dat$p1)
summary(dat$p1)
plot(x2)
hist(log(dat$rider))
x3 <- lm(log(rider+1) ~ log(pop_halfmile+1) + log(jobs_halfmile+1)
+ log(frequency) + log (bus_connections+1), dat)
summary(x3)
mean(log(0),5)
plot(x3)
dat$p3 <- predict(x3)
plot(dat$p3)
dat$p3exp <- exp(dat$p3)-1
plot(density(dat$p3exp))
lines(density(dat$rider, na.rm=TRUE), col='red')
load("data_test.Rda")
data_test$p3 <- predict(x3, newdata=data_test)
data_test$p3exp <- exp(data_test$p3)-1
plot(density(data_test$p3exp))
lines(density(data_test$rider, na.rm=TRUE),col='green')
mod <- lm(log(rider+1) ~ p3, data_test)
summary(mod)
mod <- lm(log(rider+1) ~ p3, data_test)
summary(mod)
1-sum((log(data_test$rider+1) - data_test$p3 )^2)/
sum((log(data_test$rider+1) -mean(log(data_test$rider+1)))^2)
correlation <- cor(log(data_test$rider+1), data_test$p3)
correlation^2
##How about actual ridership
correlation <- cor(data_test$rider, data_test$p3exp)
correlation^2
library(stargazer)
stargazer(x,x2, type="text")
stargazer(ols1, type="html", out="models.htm"
, dep.var.labels=c("Average light rail station boardings and alightings")
, covariate.labels=c("People within  a half mile", "Jobs within a half mile", "AM peak service frequency",
"Bus connections nearby"))
